syntax = "proto3";
import "common.proto";

message QpcMessage {
  QpcTriggerMessage trigger_message = 1;  // Type of trigger message to send
  Link link = 2;  // For whom the message is intended
}

message CalibrateClockRequest {
  Link link = 1;
  bool full_range = 2;  // Look for the correct delay in the entire 0-5000 ps range
}

message CalibratePolarizationRequest {
  Link link = 1;
}

message GetCountsRequest {
  uint32 counter = 1;
  uint32 channel = 2;
  float tot_time = 3;
}

message Counts {
  uint32 counts = 1;
}

service QPhaseToQpcCenter {
  rpc send_qpc_message (QpcMessage) returns (AckReply);
  rpc calibrate_clock (CalibrateClockRequest) returns (AckReply);
  rpc calibrate_polarization (CalibratePolarizationRequest) returns (AckReply);
  rpc get_counts (GetCountsRequest) returns (Counts);
}
